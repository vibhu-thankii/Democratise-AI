"""Add model, dataset, training_run tables and relationships

Revision ID: 6c3d89989852
Revises: 21a3efa0832c
Create Date: 2025-04-16 20:41:40.090400

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '6c3d89989852'
down_revision: Union[str, None] = '21a3efa0832c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('model',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('source_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('source_identifier', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('task_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('framework', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_model_framework'), 'model', ['framework'], unique=False)
    op.create_index(op.f('ix_model_name'), 'model', ['name'], unique=False)
    op.create_index(op.f('ix_model_source_identifier'), 'model', ['source_identifier'], unique=False)
    op.create_index(op.f('ix_model_source_type'), 'model', ['source_type'], unique=False)
    op.create_index(op.f('ix_model_task_type'), 'model', ['task_type'], unique=False)
    op.create_table('dataset',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('storage_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('storage_path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('file_size_bytes', sa.Integer(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dataset_is_public'), 'dataset', ['is_public'], unique=False)
    op.create_index(op.f('ix_dataset_name'), 'dataset', ['name'], unique=False)
    op.create_index(op.f('ix_dataset_user_id'), 'dataset', ['user_id'], unique=False)
    op.create_table('projectdatasetlink',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('dataset_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['dataset_id'], ['dataset.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('project_id', 'dataset_id')
    )
    op.create_table('projectmodellink',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['model_id'], ['model.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('project_id', 'model_id')
    )
    op.create_table('trainingrun',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=False),
    sa.Column('dataset_id', sa.Integer(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('config_params', sa.JSON(), nullable=True),
    sa.Column('metrics', sa.JSON(), nullable=True),
    sa.Column('logs_location', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['dataset_id'], ['dataset.id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['model.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_trainingrun_dataset_id'), 'trainingrun', ['dataset_id'], unique=False)
    op.create_index(op.f('ix_trainingrun_model_id'), 'trainingrun', ['model_id'], unique=False)
    op.create_index(op.f('ix_trainingrun_project_id'), 'trainingrun', ['project_id'], unique=False)
    op.create_index(op.f('ix_trainingrun_status'), 'trainingrun', ['status'], unique=False)
    op.create_index(op.f('ix_trainingrun_user_id'), 'trainingrun', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_trainingrun_user_id'), table_name='trainingrun')
    op.drop_index(op.f('ix_trainingrun_status'), table_name='trainingrun')
    op.drop_index(op.f('ix_trainingrun_project_id'), table_name='trainingrun')
    op.drop_index(op.f('ix_trainingrun_model_id'), table_name='trainingrun')
    op.drop_index(op.f('ix_trainingrun_dataset_id'), table_name='trainingrun')
    op.drop_table('trainingrun')
    op.drop_table('projectmodellink')
    op.drop_table('projectdatasetlink')
    op.drop_index(op.f('ix_dataset_user_id'), table_name='dataset')
    op.drop_index(op.f('ix_dataset_name'), table_name='dataset')
    op.drop_index(op.f('ix_dataset_is_public'), table_name='dataset')
    op.drop_table('dataset')
    op.drop_index(op.f('ix_model_task_type'), table_name='model')
    op.drop_index(op.f('ix_model_source_type'), table_name='model')
    op.drop_index(op.f('ix_model_source_identifier'), table_name='model')
    op.drop_index(op.f('ix_model_name'), table_name='model')
    op.drop_index(op.f('ix_model_framework'), table_name='model')
    op.drop_table('model')
    # ### end Alembic commands ###
